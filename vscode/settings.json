{
  "editor.suggestSelection": "first",
  "editor.stickyScroll.enabled": true,
  "editor.formatOnSave": true,
  "editor.suggest.matchOnWordStartOnly": false,
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "editor.fontFamily": "'SauceCodePro Nerd Font', 'CascadiaCodePL', Consolas",
  "editor.fontWeight": "450",
  "editor.letterSpacing": 1,
  "editor.lineHeight": 20,
  "editor.fontSize": 18,
  "editor.fontLigatures": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": true,
  "editor.smoothScrolling": true,
  "workbench.list.smoothScrolling": true,
  "typescript.suggest.paths": true,
  "npm-intellisense.importES6": true,
  "workbench.colorTheme": "Tokyo Night",
  "workbench.editor.highlightModifiedTabs": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "javascript.updateImportsOnFileMove.enabled": "always",
  "editor.minimap.enabled": false,
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.cursorBlinking": "expand",
  "editor.cursorSmoothCaretAnimation": "on",
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.python",
    "editor.formatOnType": true
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "terminal.integrated.defaultProfile.linux": "zsh",
  "terminal.integrated.smoothScrolling": true,
  "workbench.sideBar.location": "right",
  "editor.lineNumbers": "relative",
  "editor.inlineSuggest.enabled": true,
  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": false,
    "markdown": false
  },
  "workbench.iconTheme": "material-icon-theme",
  "diffEditor.ignoreTrimWhitespace": false,
  "terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1"
  },
  "githubPullRequests.fileListLayout": "tree",
  "gitlens.graph.minimap.dataType": "lines",
  "window.zoomLevel": 2,
  "vim.leader": "<Space>",
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["leader", "e"],
      "commands": ["workbench.view.explorer"]
    },
    // buffers prev/next
    { "before": ["<S-Tab>"], "commands": [":bprevious"] },
    { "before": ["<Tab>"], "commands": [":bnext"] },
    // splits
    { "before": ["leader", "v"], "commands": [":vsplit"] },
    { "before": ["leader", "s"], "commands": [":split"] },
    // panes
    {
      "before": ["leader", "x"],
      "commands": ["workbench.action.closeActiveEditor"]
    },
    {
      "before": ["leader", "h"],
      "commands": ["workbench.action.focusLeftGroup"]
    },
    {
      "before": ["leader", "j"],
      "commands": ["workbench.action.focusBelowGroup"]
    },
    {
      "before": ["leader", "k"],
      "commands": ["workbench.action.focusAboveGroup"]
    },
    {
      "before": ["leader", "l"],
      "commands": ["workbench.action.focusRightGroup"]
    },
    { "before": ["leader", "f"], "commands": ["workbench.action.quickOpen"] },
    {
      "before": ["S-k"],
      "commands": ["editor.action.showDefinitionPreviewHover"]
    },
    {
      "before": ["[", "["],
      "commands": ["editor.action.marker.prev"]
    },
    {
      "before": ["]", "]"],
      "commands": ["editor.action.marker.next"]
    },
    {
      "before": ["<leader>", "c", "a"],
      "commands": ["editor.action.quickFix"]
    }
  ],
  "vim.visualModeKeyBindings": [
    // Stay in visual mode while indenting
    { "before": ["<"], "commands": ["editor.action.outdentLines"] },
    { "before": [">"], "commands": ["editor.action.indentLines"] },
    // Move selected lines while staying in visual mode
    { "before": ["J"], "commands": ["editor.action.moveLinesDownAction"] },
    { "before": ["K"], "commands": ["editor.action.moveLinesUpAction"] },
    // toggle comment selection
    { "before": ["leader", "c"], "commands": ["editor.action.commentLine"] }
  ]
}
