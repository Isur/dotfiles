# vim:ft=yaml.ansible
---
- name: ZSH OMZ stat
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-fzf-history-search"
  register: zsh_status

- name: Removed old OhMyZsh
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.oh-my-zsh"
    state: absent
  when: not zsh_status.stat.exists

- name: Install OhMyZSH
  ansible.builtin.shell: |
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
  when: not zsh_status.stat.exists
  changed_when: true

- name: Download OhMyZSH plugins
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest }}"
    version: master
    force: true
  loop:
    - { repo: "https://github.com/joshskidmore/zsh-fzf-history-search", dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-fzf-history-search" }
    - { repo: "https://github.com/zsh-users/zsh-autosuggestions", dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions" }
    - { repo: "https://github.com/zsh-users/zsh-syntax-highlighting", dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"}
  when: not zsh_status.stat.exists

- name: ZSH Config
  ansible.builtin.file:
    src: "{{ role_path }}/files/{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
    force: true
  loop:
    - { src: "zshrc-local", dest: "{{ ansible_env.HOME }}/.zshrc" }

- name: Arch | ZSH default shell
  become: true
  ansible.builtin.user:
    user: "{{ ansible_env.USER }}"
    shell: /usr/bin/zsh
  when: ansible_os_family == 'Archlinux'

- name: Darwin | ZSH default shell
  become: true
  ansible.builtin.user:
    user: "{{ ansible_env.USER }}"
    shell: /opt/homebrew/bin/zsh
  when: ansible_os_family == 'Darwin'
